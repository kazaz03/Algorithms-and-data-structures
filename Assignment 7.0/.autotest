{
    "id": 1585,
    "name": "Algoritmi i strukture podataka (2016\/2017), Pripremna Zadaca Za Vjezbu 6, zadatak 1",
    "languages": [
        "C++"
    ],
    "tools": {
        "compile": {
            "require": "g++",
            "features": [
                "optimize",
                "warn",
                "pedantic",
                "C++11"
            ]
        },
        "compile[debug]": {
            "require": "g++",
            "features": [
                "debug",
                "C++11"
            ]
        },
        "execute": {
            "environment": {
                "timeout": 10,
                "memory": 1000000
            }
        },
        "debug": [],
        "profile[memcheck]": {
            "require": "valgrind",
            "features": [
                "memcheck"
            ],
            "environment": {
                "timeout": 10
            }
        },
        "profile[sgcheck]": {
            "require": "valgrind",
            "features": [
                "sgcheck"
            ],
            "environment": {
                "timeout": 10
            }
        }
    },
    "tests": [
        {
            "compile": [],
            "options": [
                "silent",
                "terminate"
            ]
        },
        {
            "id": 1586,
            "patch": [
                {
                    "position": "main",
                    "code": "int niz[5] = {3, 2, 8, 1, 5};\nbubble_sort(niz, 5);\nfor (int i(0); i<5; i++)\n    cout << niz[i] << \" \";",
                    "use_markers": true
                }
            ],
            "compile[debug]": [],
            "execute": {
                "expect": [
                    "1 2 3 5 8"
                ]
            },
            "debug": [],
            "profile[memcheck]": [],
            "profile[sgcheck]": []
        },
        {
            "id": 1587,
            "patch": [
                {
                    "position": "main",
                    "code": "int niz[5] = {3, 2, 8, 1, 5};\nselection_sort(niz, 5);\nfor (int i(0); i<5; i++)\n    cout << niz[i] << \" \";",
                    "use_markers": true
                }
            ],
            "compile[debug]": [],
            "execute": {
                "expect": [
                    "1 2 3 5 8"
                ]
            },
            "debug": [],
            "profile[memcheck]": [],
            "profile[sgcheck]": []
        },
        {
            "id": 1588,
            "patch": [
                {
                    "position": "main",
                    "code": "int niz[5] = {3, 2, 8, 1, 5};\nquick_sort(niz, 5);\nfor (int i(0); i<5; i++)\n    cout << niz[i] << \" \";",
                    "use_markers": true
                }
            ],
            "compile[debug]": [],
            "execute": {
                "expect": [
                    "1 2 3 5 8"
                ]
            },
            "debug": [],
            "profile[memcheck]": [],
            "profile[sgcheck]": []
        },
        {
            "id": 1589,
            "patch": [
                {
                    "position": "main",
                    "code": "int niz[5] = {3, 2, 8, 1, 5};\nmerge_sort(niz, 5);\nfor (int i(0); i<5; i++)\n    cout << niz[i] << \" \";",
                    "use_markers": true
                }
            ],
            "compile[debug]": [],
            "execute": {
                "expect": [
                    "1 2 3 5 8"
                ]
            },
            "debug": [],
            "profile[memcheck]": [],
            "profile[sgcheck]": []
        },
        {
            "id": 1590,
            "patch": [
                {
                    "position": "main",
                    "code": "int* niz;\nint vel = 0;\ngenerisi(\"autotest.txt\", 3000000);\nucitaj(\"autotest.txt\", niz, vel);\nmerge_sort(niz, vel);\nfor(int i(0); i<vel-1; i++) \n    if(niz[i] > niz[i+1]) {\n        cout << \"NOT \";\n        break;\n    }\ncout << \"OK\";\ndelete[] niz;",
                    "use_markers": true
                }
            ],
            "compile[debug]": [],
            "execute": {
                "expect": [
                    "OK"
                ]
            },
            "debug": [],
            "profile[memcheck]": [],
            "profile[sgcheck]": []
        },
        {
            "id": 1591,
            "patch": [
                {
                    "position": "main",
                    "code": "int vel(10000000);\nint* niz = new int[vel];\nfor (int i(0); i<vel; i++)\n\tniz[i] = rand();\nquick_sort(niz, vel);\nfor(int i(0); i<vel-1; i++) \n\tif(niz[i] > niz[i+1]) {\n\t\tcout << \"NOT \";\n\t\tbreak;\n\t}\ncout << \"OK\";\ndelete[] niz;",
                    "use_markers": true
                }
            ],
            "compile[debug]": [],
            "execute": {
                "expect": [
                    "OK"
                ]
            },
            "debug": [],
            "profile[memcheck]": [],
            "profile[sgcheck]": []
        },
        {
            "id": 1592,
            "patch": [
                {
                    "position": "main",
                    "code": "int* niz;\nint vel = 0;\ngenerisi(\"autotest.txt\", 3000000);\nucitaj(\"autotest.txt\", niz, vel);\nmerge_sort(niz, vel);\nfor(int i(0); i<vel-1; i++) \n    if(niz[i] > niz[i+1]) {\n        cout << \"NOT \";\n        break;\n    }\ncout << \"OK\";\ndelete[] niz;",
                    "use_markers": true
                }
            ],
            "compile[debug]": [],
            "execute": {
                "expect": [
                    "OK"
                ]
            },
            "debug": [],
            "profile[memcheck]": [],
            "profile[sgcheck]": []
        },
        {
            "id": 1593,
            "patch": [
                {
                    "position": "main",
                    "code": "int vel(10000000);\nint* niz = new int[vel];\nfor (int i(0); i<vel; i++)\n\tniz[i] = rand();\nquick_sort(niz, vel);\nfor(int i(0); i<vel-1; i++) \n\tif(niz[i] > niz[i+1]) {\n\t\tcout << \"Greska: i=\"<<i<<\" \"<<niz[i]<<\">\"<<niz[i+1]<<endl;\n\t\tbreak;\n\t}\ncout << \"OK\";\ndelete[] niz;",
                    "use_markers": true
                }
            ],
            "compile[debug]": [],
            "execute": {
                "expect": [
                    "OK"
                ]
            },
            "debug": [],
            "profile[memcheck]": [],
            "profile[sgcheck]": []
        },
        {
            "id": 1594,
            "patch": [
                {
                    "position": "main",
                    "code": "\/\/ Testovi da li funkcije rade sa tipom razlicitim od int\nstd::string niz[5] = {\"ddd\", \"abc\", \"abc\", \"zzz\", \"aaa\"};\nbubble_sort(niz, 5);\nfor (int i(0); i<5; i++)\n    cout << niz[i] << \" \";\ncout << endl;\n\nstd::string niz2[5] = {\"ddd\", \"abc\", \"abc\", \"zzz\", \"aaa\"};\nselection_sort(niz2, 5);\nfor (int i(0); i<5; i++)\n    cout << niz2[i] << \" \";\ncout << endl;\n\nstd::string niz3[5] = {\"ddd\", \"abc\", \"abc\", \"zzz\", \"aaa\"};\nquick_sort(niz3, 5);\nfor (int i(0); i<5; i++)\n    cout << niz3[i] << \" \";\ncout << endl;\n\nstd::string niz4[5] = {\"ddd\", \"abc\", \"abc\", \"zzz\", \"aaa\"};\nmerge_sort(niz4, 5);\nfor (int i(0); i<5; i++)\n    cout << niz4[i] << \" \";",
                    "use_markers": true
                }
            ],
            "compile[debug]": [],
            "execute": {
                "expect": [
                    "aaa abc abc ddd zzz \naaa abc abc ddd zzz \naaa abc abc ddd zzz \naaa abc abc ddd zzz"
                ]
            },
            "debug": [],
            "profile[memcheck]": [],
            "profile[sgcheck]": []
        }
    ]
}